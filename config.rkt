#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2.0.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 24 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 11 #"Input Mono\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 11 #"Input Mono\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 753 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"common.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;; version history"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; v1.0 - initial release - support for processing config items"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;; purpose"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #"; to provide an easy-to-use module for loading items from a standard"
 #" configuration file"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #"; sample main:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         727 21           0 0           0 120 0 17 3 42
#"; read program and database configuration;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"config-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"load-config"
0 0 24 3 1 #" "
0 0 14 3 17 #"*config-filename*"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 23 #"*config-section-length*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 10 #"config-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"die"
0 0 24 3 1 #" "
0 0 14 3 22 #"*program-config-error*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"db-config"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 10 #"config-lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 8 #"database"
0 0 24 3 1 #" "
0 0 14 3 8 #"hostname"
0 0 24 3 1 #" "
0 0 14 3 8 #"username"
0 0 24 3 1 #" "
0 0 14 3 8 #"password"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"get-db-settings"
0 0 24 3 1 #" "
0 0 14 3 9 #"db-config"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 18 #"*default-database*"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 18 #"*default-hostname*"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 18 #"*default-username*"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 18 #"*default-password*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"product-search-query"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 22 #"get-config-item-or-die"
0 0 24 3 1 #" "
0 0 14 3 9 #"db-config"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"query=\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; unit test"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Database Query:\\n\""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 20 #"product-search-query"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; for each config item, run the query and send an email if results f"
 #"ound."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 20 #"process-config-items"
0 0 24 3 1 #" "
0 0 14 3 18 #"process-subscriber"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 10 #"config-lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 20 #"product-search-query"
0 0 24 3 1 #")"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 11 #"load-config"
0 0 24 3 25 #"                         "
0 0 17 3 14 #"; (load-config"
0 0 17 3 25 #" filename section-length)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 5 #"check"
0 0 14 3 1 #"-"
0 0 14 3 6 #"config"
0 0 24 3 24 #"                        "
0 0 17 3 2 #"; "
0 0 17 3 1 #"("
0 0 17 3 12 #"check-config"
0 0 17 3 1 #" "
0 0 17 3 13 #"section-count"
0 0 17 3 1 #" "
0 0 17 3 28 #"config-lines section-length)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 25 #"enumerate-config-sections"
0 0 24 3 11 #"           "
0 0 17 3 42 #"; (enumerate-config-sections config-lines)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"get-config-list"
0 0 24 3 21 #"                     "
0 0 17 3 67
#"; (get-config-list config-filename section-line-count config-error)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 6 #"get-co"
0 0 14 3 1 #"n"
0 0 14 3 1 #"f"
0 0 14 3 1 #"i"
0 0 14 3 3 #"g-v"
0 0 14 3 1 #"a"
0 0 14 3 3 #"lue"
0 0 24 3 20 #"                    "
0 0 17 3 34 #"; (get-config-value config prefix)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 22 #"get-config-item-or-die"
0 0 24 3 14 #"              "
0 0 17 3 26 #"; (get-config-item-or-die "
0 0 17 3 14 #"config prefix)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"strip-config"
0 0 24 3 24 #"                        "
0 0 17 3 20 #"; (strip-config str)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 35 #"get-program-config-value-or-default"
0 0 24 3 1 #" "
0 0 17 3 76
(
 #"; (get-launchpad-config-value-or-default config prefix default confi"
 #"g-error)"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"get-db-settings"
0 0 24 3 21 #"                     "
0 0 17 3 2 #"; "
0 0 17 3 1 #"("
0 0 17 3 8 #"get-db-s"
0 0 17 3 7 #"ettings"
0 0 17 3 1 #" "
0 0 17 3 15 #"program-config "
0 0 17 3 16 #"default-database"
0 0 17 3 1 #" "
0 0 17 3 16 #"default-hostname"
0 0 17 3 1 #" "
0 0 17 3 34 #"default-username default-password)"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 6 #"proces"
0 0 14 3 14 #"s-config-items"
0 0 24 3 16 #"                "
0 0 17 3 2 #"; "
0 0 17 3 1 #"("
0 0 17 3 20 #"process-config-items"
0 0 17 3 1 #" "
0 0 17 3 4 #"proc"
0 0 17 3 31 #" config-lst optional-param-str)"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;; constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; regex matches a [section in brackets]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"*config-section-regex*"
0 0 24 3 1 #" "
0 0 19 3 11 #"#rx\"^[]|[]\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; config file database line prefixes and config defaults"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"*hostname-prefix*"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"hostname=\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"*database-prefix*"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"database=\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"*username-prefix*"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"username=\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"*password-prefix*"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"password=\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;; defs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; return a launchpad config valyue or use provided default if no va"
 #"lue set"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 35 #"get-program-config-value-or-default"
0 0 24 3 1 #" "
0 0 14 3 6 #"config"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 15 3 7 #"default"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"value"
0 0 24 3 2 #" ("
0 0 14 3 4 #"get-"
0 0 14 3 12 #"config-value"
0 0 24 3 1 #" "
0 0 14 3 6 #"config"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 17 #"non-empty-string?"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #") "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 15 3 7 #"default"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56
#";; strip a string from [brackets] and double-quotes \"\"'s"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"strip-config"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 8 #"composex"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"string-replace"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 22 #"*config-section-regex*"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 17 3 13 #"; remove []'s"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"string-replace"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\\"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 18 #"))                "
0 0 17 3 22 #"; remove double quotes"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"str"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; returns a list of config [section]'s from the given config-file"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"enumerate-config-sections"
0 0 24 3 1 #" "
0 0 14 3 12 #"config-lines"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 12 #"strip-config"
0 0 24 3 2 #" ("
0 0 14 3 4 #"grep"
0 0 24 3 1 #" "
0 0 14 3 12 #"config-lines"
0 0 24 3 1 #" "
0 0 14 3 22 #"*config-section-regex*"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; generic config value extractor"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; config is a list of .conf file lines"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; config-error specifies the error message to display if valut not "
 #"found"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-config-value"
0 0 24 3 1 #" "
0 0 14 3 6 #"config"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"value"
0 0 24 3 2 #" ("
0 0 14 3 22 #"get-unique-prefix-line"
0 0 24 3 1 #" "
0 0 14 3 6 #"config"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; check config lines for the proper number of items"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-config"
0 0 24 3 1 #" "
0 0 14 3 13 #"section-count"
0 0 24 3 1 #" "
0 0 14 3 12 #"config-lines"
0 0 24 3 1 #" "
0 0 14 3 14 #"section-length"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 12 #"config-lines"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 13 #"section-count"
0 0 24 3 1 #" "
0 0 14 3 14 #"section-length"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")) "
0 0 17 3 65
#"; force config file format to be divisible by the number of paths"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; returns true if string isn't empty or a comment (starts with '//'"
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"not-empty-or-comment?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 17 #"non-empty-string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string-prefix?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"//\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string-prefix?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"#\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string-prefix?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; load config file and return a list of config sections in the foll"
 #"owing format:"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #"; [section]"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; path to binary folder"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; path to licence.dat file"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-config-list"
0 0 24 3 1 #" "
0 0 14 3 15 #"config-filename"
0 0 24 3 1 #" "
0 0 14 3 25 #"config-section-line-count"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 12 #"config-lines"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"file->lines"
0 0 24 3 1 #" "
0 0 14 3 15 #"config-filename"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 13 #"trimmed-lines"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 11 #"string-trim"
0 0 24 3 1 #" "
0 0 14 3 12 #"config-lines"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 18 #"clean-config-lines"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 21 #"not-empty-or-comment?"
0 0 24 3 1 #" "
0 0 14 3 13 #"trimmed-lines"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 8 #"sections"
0 0 24 3 12 #"           ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"stri"
0 0 14 3 8 #"p-config"
0 0 24 3 2 #" ("
0 0 14 3 4 #"grep"
0 0 24 3 1 #" "
0 0 14 3 18 #"clean-config-lines"
0 0 24 3 1 #" "
0 0 14 3 22 #"*config-section-regex*"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 13 #"section-count"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 8 #"sections"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 18 #"clean-config-lines"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 13 #"section-count"
0 0 24 3 1 #" "
0 0 14 3 25 #"config-section-line-count"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"chop"
0 0 24 3 1 #" "
0 0 14 3 18 #"clean-config-lines"
0 0 24 3 1 #" "
0 0 14 3 25 #"config-section-line-count"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; check config file exists and read, clean and check config file"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"load-config"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 14 #"section-length"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"die"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 12 #" not found.\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"get-config-list"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 14 #"section-length"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; grab a database configuration from a config file"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-db-settings"
0 0 24 3 1 #" "
0 0 14 3 14 #"program-config"
0 0 24 3 1 #" "
0 0 15 3 16 #"default-database"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 15 3 16 #"default-hostname"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 15 3 16 #"default-username"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 15 3 16 #"default-password"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"database"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 35 #"get-program-config-value-or-default"
0 0 24 3 1 #" "
0 0 14 3 14 #"program-config"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 14 3 17 #"*database-prefix*"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 15 3 16 #"default-database"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"hostname"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 35 #"get-program-config-value-or-default"
0 0 24 3 1 #" "
0 0 14 3 14 #"program-config"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 14 3 17 #"*hostname-prefix*"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 15 3 16 #"default-hostname"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"username"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 35 #"get-program-config-value-or-default"
0 0 24 3 1 #" "
0 0 14 3 14 #"program-config"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 14 3 17 #"*username-prefix*"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 15 3 16 #"default-username"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"password"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 35 #"get-program-config-value-or-default"
0 0 24 3 1 #" "
0 0 14 3 14 #"program-config"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 14 3 17 #"*password-prefix*"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 15 3 16 #"default-password"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 8 #"database"
0 0 24 3 1 #" "
0 0 14 3 8 #"hostname"
0 0 24 3 1 #" "
0 0 14 3 8 #"username"
0 0 24 3 1 #" "
0 0 14 3 8 #"password"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; process configs from the config file"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"process-config-items"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 10 #"config-lst"
0 0 24 3 2 #" ["
0 0 14 3 18 #"optional-param-str"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"results"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 18 #"optional-param-str"
0 0 24 3 3 #")) "
0 0 14 3 10 #"config-lst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"results"
0 0 24 3 2 #" ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 13 #"Configuration"
0 0 19 3 1 #" "
0 0 19 3 8 #"executed"
0 0 19 3 14 #" successfully."
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"die"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #" "
0 0 19 3 9 #"executing"
0 0 19 3 1 #" "
0 0 19 3 15 #"configuration: "
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 7 #"results"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; returns a config item from a single config and a prefix"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"get-config-item-or-die"
0 0 24 3 1 #" "
0 0 14 3 6 #"config"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"value"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-config-value"
0 0 24 3 1 #" "
0 0 14 3 6 #"config"
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"die"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Missing"
0 0 19 3 1 #" "
0 0 19 3 6 #"config"
0 0 19 3 1 #" "
0 0 19 3 6 #"item: "
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 6 #"prefix"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"...\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; EOF"
0           0
